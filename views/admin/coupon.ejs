<%- include('../layout/admin/adminHeader') %>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" rel="stylesheet">
 
        <section class="content-main">
                <div class="content-header">
                    <div>
                        <h2 class="content-title card-title">Coupons</h2>
                    </div>
                    <div>
                        <button class="btn btn-outline-gradient btn-primary" data-toggle="modal" data-target="#addCouponModal">Add Coupon</button>
                    </div>
                </div>
               
                <!-- <div>
                    <input type="text" placeholder="Search by name" class="form-control bg-white" />
                </div> -->
            
                <div class="main-panel">
                    <div class="content-wrapper">
                        <div class="col-lg-12 grid-margin stretch-card">
                            <div class="card">
                                <div class="card-body table-responsive">
                                    <table class="table table-bordered border-top table-hover">
                                        <thead>
                                            <tr class="text-center">
                                                <!-- <th>Coupon Code</th>
                                                <th>price</th>
                                                <th>discount</th>
                                                <th>Valid Till</th> -->

                                                <th>Coupon Code</th>
                                                <th>Offer Percentage</th>
                                                <th>Min Price</th>
                                                <th>Valid Till</th>
                                                <th>Max Redeemable</th>      
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if(coupons && coupons.length > 0) { %>
                                                <% coupons.forEach(coupon => { %>
                                                    <tr class="text-center">
                                                        <!-- <td><%= coupon.couponCode %></td>
                                                        <td>₹<%= coupon.price %> </td>
                                                        <td>₹<%= coupon.discount %></td>
                                                        <td><%= coupon.expiryDate?.toLocaleDateString() %></td> -->
                                                        <td><%= coupon.couponCode %></td>
                                                        <td><%= coupon.percentage %></td>
                                                        <td>₹<%= coupon.minPrice %></td>
                                                        <td><%= coupon.expiryDate?.toLocaleDateString() %></td>
                                                        <td>₹<%= coupon.maxRedeemAmount %></td>
                                                       
                                                        <td>
                                                            <!-- <button 
                                                            class="btn-sm edit-btn" 
                                                            style="background: linear-gradient(45deg, #FFBA00, #FF6C00); border: none; color: white; padding: 8px 16px; border-radius: 4px; transition: background 0.3s ease;" 
                                                            data-toggle="modal" 
                                                            data-target="#editItemModal<%= coupon._id %>">
                                                            Edit
                                                        </button> -->
                                                        <button 
                                                        class="btn-sm edit-btn" 
                                                        style="background: linear-gradient(45deg, #FFBA00, #FF6C00); border: none; color: white; padding: 8px 16px; border-radius: 4px; transition: background 0.3s ease;" 
                                                        onclick="showEditModal('<%= coupon._id %>')">
                                                           Edit
                                                          </button>
                                                        
                                                            <button class="btn-sm btn-danger status-btn" onclick="removeCoupon('<%= coupon._id %>')">Delete</button>
                                                        </td>
                                                    </tr>
                                               
                         <!--------------------------------------- Edit Coupon Modal for each coupon ----------------------------------------------------->
                         <div class="modal fade" id="editItemModal<%= coupon._id %>" tabindex="-1" role="dialog" aria-labelledby="editItemModalLabel<%= coupon._id %>" data-focus="false" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editItemModalLabel<%= coupon._id %>">Edit Coupon</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <form id="editItemForm<%= coupon._id %>">
                                            <div class="form-group">
                                                <label for="editItemCode<%= coupon._id %>">Coupon Code</label>
                                                <input type="text" class="form-control" id="editItemCode<%= coupon._id %>" name="itemCode" value="<%= coupon._id %>" >
                                                <small id="editItemCodeError<%= coupon._id %>" class="text-danger"></small>
                                            </div>
                                            <div class="form-group">
                                                <label for="editItemPercentage<%= coupon._id %>">Offer Percentage</label>
                                                <input type="number" class="form-control" id="editItemPercentage<%= coupon._id %>" name="percentage" value="<%= coupon.percentage %>"  >
                                                <small id="editItemPercentageError<%= coupon._id %>" class="text-danger"></small>
                                            </div>
                                            <div class="form-group">
                                                <label for="editItemMinPrice<%= coupon._id %>">minPrice</label>
                                                <input type="number" class="form-control" id="editItemMinPrice<%= coupon._id %>" name="minprice" value="<%= coupon.minPrice %>" >
                                                <small id="editItemMinPriceError<%= coupon._id %>" class="text-danger"></small>
                                            </div>
                                            <div class="form-group">
                                                <label for="editMaxRedeemAmount<%= coupon._id %>">Max Redeemable</label>
                                                <input type="number" class="form-control" id="editMaxRedeemAmount<%= coupon._id %>" name="editMaxRedeemAmount" value="<%= coupon.maxRedeemAmount %>" >
                                                <small id="editMaxRedeemAmountError<%= coupon._id %>" class="text-danger"></small>
                                            </div>
                                            <div class="form-group">
                                                <label for="editItemExpiryDate<%= coupon._id %>">Expiry Date</label>
                                                <input type="date" class="form-control" id="editItemExpiryDate<%= coupon._id %>" name="expiryDate" value="<%= coupon.expiryDate.toISOString().substr(0, 10) %>" >
                                                <small id="editItemExpiryDateError<%= coupon._id %>" class="text-danger"></small>
                                            </div>
                                            <button type="submit" class="btn btn-gradient-primary">Update Item</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        
                                                <% }) %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="6" class="text-center">No offers found</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table> 
                                    
                                </div>
                                <div class="pagination-container mt-4">
                                    <ul class="pagination justify-content-center">
                                        <% if (currentPage > 1) { %>
                                        <li class="page-item">
                                            <a class="page-link page-link-custom" href="?page=<%= currentPage - 1 %>" style="background-color: #fff; border-color: #000000; color: #000;">Previous</a>
                                        </li>
                                        <% } %>
                                        <% for(let i = 1; i <= totalPages; i++) { %>
                                         <li class="page-item <%= i === currentPage ? 'bg-dark text-light' : 'btn-light text-dark' %>" style="border-color: #000;">
                                            <a class="page-link page-link-custom <%= i === currentPage ? 'bg-dark text-light' : 'btn-light text-dark' %>" href="?page=<%= i %>" style="border-color: #000;"><%= i %></a>
                                        </li>
                                        <% } %>
                                        <% if (currentPage < totalPages) { %>
                                        <li class="page-item">
                                            <a class="page-link page-link-custom" href="?page=<%= currentPage + 1 %>" style="background-color: #fff; border-color: #000; color: #000;">Next</a>
                                        </li>
                                        <% } %>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


     </section>

     <script>
        function showEditModal(couponId) {
    setTimeout(() => {
        $(`#editItemModal${couponId}`).modal('show');
    }, 100);
}
     </script>


      <!---------------------- add coupon modal------------------ -->

     <div class="modal fade" id="addCouponModal" tabindex="-1" role="dialog" aria-labelledby="addCouponModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCouponModalLabel">Add Coupon</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addCouponForm">
                        <div class="form-group">
                            <label for="couponCode">Coupon Code</label>
                            <input type="text" class="form-control" id="couponCode" name="couponCode" >
                            <small id="couponCodeError" class="text-danger"></small>
                        </div>
                        <div class="form-group">
                            <label for="price">Offer Percentage</label>
                            <input type="number" class="form-control" id="percentage" name="percentage"  >
                            <small id="percentageError" class="text-danger"></small>
                        </div>
                         <div class="form-group">
                            <label for="minPrice"> minPrice,</label>
                            <input type="number" class="form-control" id="minPrice" name="minPrice" >
                            <small id="minPriceError" class="text-danger"></small>
                        </div>
                        <div class="form-group">
                            <label for="price"> maxRedeemAmount,</label>
                            <input type="number" class="form-control" id="maxRedeemAmount" name="maxRedeemAmount" >
                            <small id="maxRedeemAmountError" class="text-danger"></small>
                        </div> 
                        
                        
                        <div class="form-group">
                            <label for="expiryDate">Expiry Date</label>
                            <input type="date" class="form-control" id="expiryDate" name="expiryDate" >
                            <small id="expiryDateError" class="text-danger"></small>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Coupon</button>
                    </form>
                </div>
            </div>
        </div>
     </div>

        

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

        <!-------------- add coupon validation ----------->
        
        <!-- ADD COUPON -->
          <script>
             document.getElementById('addCouponForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        const couponCode = document.getElementById('couponCode').value.trim();
        const percentage= document.getElementById('percentage').value.trim();
        const minPrice = document.getElementById('minPrice').value.trim(); 
        const maxRedeemAmount = document.getElementById('maxRedeemAmount').value.trim();
        const expiryDate = document.getElementById('expiryDate').value.trim();
  console.log(couponCode,percentage, minPrice,maxRedeemAmount,expiryDate)

        const percentageRegex = /^[0-9]+$/;
        const numericRegex = /^[0-9]+(?:\.[0-9]+)?$/;

        let isValid = true;
        if (!couponCode.match(/[a-zA-Z0-9]+/)) {
            document.getElementById('couponCodeError').textContent = 'Coupon code must consist of alphanumeric characters only.';
            isValid = false;
        } else {
            document.getElementById('couponCodeError').textContent = '';
        }


        if(!percentage.match(/^(\d{1,2}(\.\d{1,2})?|100)$/)){
            document.getElementById('percentageError').textContent = 'Percentage must be a valid number between 1 and 100.';
            isValid = false;
        } else {
            document.getElementById('percentageError').textContent = '';
        } 
        
        if (!numericRegex.test(minPrice) || minPrice < 100 || minPrice > 10000) {
            document.getElementById('minPriceError').textContent = 'Min Price must be a valid number between 100 and 10000.';
            isValid = false;
        } else {
            document.getElementById('minPriceError').textContent = '';
        }

        if (!numericRegex.test(maxRedeemAmount) || maxRedeemAmount < 10 || maxRedeemAmount > 10000) {
            document.getElementById('maxRedeemAmountError').textContent = 'Max Redeemable must be a number between 10 and 10000.';
            isValid = false;
        } else {
            document.getElementById('maxRedeemAmountError').textContent = '';
        }
       

        const today = new Date().toISOString().split('T')[0];
        if (expiryDate < today) {
            document.getElementById('expiryDateError').textContent = 'Select a date greater than current date';
            return;
        }

        if (!isValid) {
            return;
        }

        try {
            const response = await fetch('/admin/coupons/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    couponCode,
                    percentage,
                    minPrice,
                    maxRedeemAmount,
                    expiryDate
                })
            });

            const result = await response.json();

            if (response.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Coupon added successfully',
                    confirmButtonText: 'OK'
                }).then(() => {
                    document.getElementById('addCouponForm').reset();
                    $('#addCouponModal').modal('hide');
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: result.message || 'An error occurred',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Failed to add coupon',
                confirmButtonText: 'OK'
            });
        }
     });


     

     

     //---------- EDIT COUPON -----------//
      const editCouponForms = document.querySelectorAll('[id^=editItemForm]');
      editCouponForms.forEach(form => {
     form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const couponId = form.getAttribute('id').replace('editItemForm', '');
        const couponCode = document.getElementById(`editItemCode${couponId}`).value.trim();
        const percentage = document.getElementById(`editItemPercentage${couponId}`).value.trim();
        const minPrice = document.getElementById(`editItemMinPrice${couponId}`).value.trim();
        const maxRedeemAmount = document.getElementById(`editMaxRedeemAmount${couponId}`).value.trim();
        const expiryDate = document.getElementById(`editItemExpiryDate${couponId}`).value.trim();
 
        

        const percentageRegex = /^[0-9]+$/;
        const numericRegex = /^[0-9]+(?:\.[0-9]+)?$/;

        let isValid = true;
        if (!couponCode.match(/[a-zA-Z0-9]+/)) {
            document.getElementById(`editItemCodeError${couponId}`).textContent = 'Coupon code must consist of alphanumeric characters only.';
            isValid = false;
        } else {
            document.getElementById(`editItemCodeError${couponId}`).textContent = '';
        }

        if (!percentage.match(/^(\d{1,2}(\.\d{1,2})?|100)$/)) {
            document.getElementById(`editItemPercentageError${couponId}`).textContent = 'Percentage must be a valid number between 1 and 100.';
            isValid = false;
        } else {
            document.getElementById(`editItemPercentageError${couponId}`).textContent = '';
        }

        if (!numericRegex.test(minPrice) || minPrice < 100 || minPrice > 5000) {
            document.getElementById(`editItemMinPriceError${couponId}`).textContent = 'Min Price must be a valid number between 100 and 5000.';
            isValid = false;
        } else {
            document.getElementById(`editItemMinPriceError${couponId}`).textContent = '';
        }

        if (!numericRegex.test(maxRedeemAmount) || maxRedeemAmount < 10 || maxRedeemAmount > 10000) {
            document.getElementById(`editMaxRedeemAmountError${couponId}`).textContent = 'Max Redeemable must be a number between 10 and 10000.';
            isValid = false;
        } else {
            document.getElementById(`editMaxRedeemAmountError${couponId}`).textContent = '';
        }
        
 

        const today = new Date().toISOString().split('T')[0];
        if (expiryDate < today) {
            document.getElementById(`editItemExpiryDateError${couponId}`).textContent = 'Select a date greater than the current date';
            return;
        }

        if (!isValid) {
            return;
        }

        try {
            const response = await fetch(`/admin/coupons/edit?id=${couponId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    couponCode,
                    percentage,
                    minPrice,
                    maxRedeemAmount,
                    expiryDate
                })
            });

            const result = await response.json();

            if (response.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Coupon updated successfully',
                    confirmButtonText: 'OK'
                }).then(() => {
                    $(`#editItemModal${couponId}`).modal('hide');
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: result.message || 'An error occurred',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Failed to update coupon',
                confirmButtonText: 'OK'
            });
        }
      });
     });

      $('#addCouponModal').on('hidden.bs.modal', function () {
       document.getElementById('addCouponForm').reset();
     document.querySelectorAll('#addCouponForm .text-danger').forEach(el => {
        el.textContent = '';
     });
      });

       $('.editItemModal').on('hidden.bs.modal', function () {
     const couponId = $(this).attr('id').replace('editItemModal', '');
     document.getElementById(`editItemForm${couponId}`).reset();
     document.querySelectorAll(`#editItemForm${couponId} .text-danger`).forEach(el => {
        el.textContent = '';
     });
     });


      //---------- DELETE COUPON -----------//
    function removeCoupon(couponId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You will not be able to recover this coupon!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/coupons/delete?couponId=${couponId}`, {
                        method: 'DELETE'
                    });

                    const data = await response.json();

                    if (response.ok) {
                        Swal.fire(
                            'Deleted!',
                            'The coupon has been deleted.',
                            'success'
                        ).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: data.message || 'Failed to delete coupon',
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Failed to delete coupon',
                        confirmButtonText: 'OK'
                    });
                }
            }
        });
    }
</script> 

<!-- <script>
    document.getElementById('addCouponForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const couponCode = document.getElementById('couponCode').value.trim();
    const price = document.getElementById('price').value.trim();
    const discount = document.getElementById('discount').value.trim();
    const expiryDate = document.getElementById('expiryDate').value.trim();
    
    const alphanumericRegex = /^[a-zA-Z0-9]+$/;
    const numericRegex = /^[0-9]+(?:\.[0-9]+)?$/;

    let isValid = true;

    // Coupon Code Validation
    if (!alphanumericRegex.test(couponCode)) {
        document.getElementById('couponCodeError').textContent = 'Coupon code must consist of alphanumeric characters only.';
        isValid = false;
    } else {
        document.getElementById('couponCodeError').textContent = '';
    }

    // Price Validation
    if (!numericRegex.test(price) || price <= 0) {
        document.getElementById('priceError').textContent = 'Please enter a valid purchase amount.';
        isValid = false;
    } else {
        document.getElementById('priceError').textContent = '';
    }

    // Discount Validation
    if (!numericRegex.test(discount) || discount <= 0 || discount >= price) {
        document.getElementById('discountError').textContent = 'Discount must be a valid number less than the purchase amount.';
        isValid = false;
    } else {
        document.getElementById('discountError').textContent = '';
    }

    // Expiry Date Validation
    const today = new Date().toISOString().split('T')[0];
    if (expiryDate < today) {
        document.getElementById('expiryDateError').textContent = 'Select a date greater than the current date.';
        isValid = false;
    } else {
        document.getElementById('expiryDateError').textContent = '';
    }

    // Final Validation Check
    if (!isValid) return;

    // Submit Data if Valid
    try {
        const response = await fetch('/admin/coupons/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                couponCode, price, discount, expiryDate
            })
        });

        const result = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Coupon added successfully!',
                confirmButtonText: 'OK'
            }).then(() => {
                document.getElementById('addCouponForm').reset();
                $('#addCouponModal').modal('hide');
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: result.message || 'An error occurred while adding the coupon',
                confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to add coupon',
            confirmButtonText: 'OK'
        });
    }
});

</script> -->


         </script>


   
   

<!-- Add these before the closing </body> tag or in adminFooter -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>





<%- include('../layout/admin/adminFooter') %>