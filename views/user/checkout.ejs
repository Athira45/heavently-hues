<%- include('../layout/User/header') %>

<style>
    #payment {
    width: 100%; 
    padding: 10px; 
    font-size: 16px; 
    color: #007bff;
    background-color: #f8f9fa; 
    border: 1px solid #ced4da; 
    border-radius: 4px; 
    appearance: none; 
    transition: border-color 0.3s ease; 
}

#payment:hover {
    border-color: #007bff; 
}

#payment:focus {
    outline: none;
    border-color: #007bff; 
    box-shadow: 0 0 5px rgba(247, 144, 47, 0.733); 
}

</style>

 <style>
    /* body {
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        background-color: #f0f0f0;
    } */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
    }
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 300px;
        border-radius: 5px;
    }
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }
    .close:hover,
    .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
    }
    .discount-item {
        background-color: #e6f3ff;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
    }
    .discount-code {
        font-weight: bold;
        color: #0066cc;
    }
    .discount-percentage {
        float: right;
        color: #0066cc;
    }
    .apply-btn {
        background-color: #4CAF50;
        border: none;
        color: white;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 5px;
        width: 100%;
    }
</style>

<style>
    .modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

.modal-content {
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

</style>




<main class="main">
    <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        <div class="container">
            <h1 class="page-title">Checkout<span>Shop</span></h1>
        </div><!-- End .container -->
    </div><!-- End .page-header -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/cart">cart</a></li>
                <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
        </div><!-- End .container -->
    </nav><!-- End .breadcrumb-nav -->

    <div class="page-content">
        <div class="checkout">
            <div class="container">
                <div class="checkout-discount">
                    <form action="#">
                        <!-- <input type="text" class="form-control" required id="checkout-discount-input">
                        <label for="checkout-discount-input" class="text-truncate">Have a coupon? <span>Click here to enter your code</span></label> -->
                    </form>
                </div>
                <form action="#">
                    <div class="row">
                        <div class="col-lg-9">
                            <h2 class="checkout-title">Select Address</h2>
                                
                            <div id="addressRadioGroup">
                                <% if (user && user.address && user.address.length> 0) { %>
                                    <% user.address.forEach(Address=> { %>
                                        <div class="form-check address-container">
                                            <input class="form-check-input" type="radio" name="selectedAddress"
                                                id="<%= `address${Address._id}` %>"
                                                value="<%= JSON.stringify(Address) %>">
                                            <label class="form-check-label"
                                                for="<%= `address${Address._Id}` %>">
                                                <%= `Name: ${Address.name}, Mobile: ${Address.mobile}, Address:
                                                    ${Address.address}, City: ${Address.city}, Pincode:
                                                    ${Address.pincode}, State: ${Address.state}` %>
                                            </label>

                                            <a href="#" data-toggle="modal"
                                            data-target="#editModal<%=Address._id%>">Edit <i
                                                class="icon-edit"></i></a>

                                                
                                                
                                        </div>
                                        <% }); %>
                                            <% } else { %>
                                                <p>No addresses found for this user.</p>
                                                <% } %>
                            </div>


                            <% user.address.forEach((Address)=>{%>
                                <div class="modal fade" id="editModal<%= Address._id %>" tabindex="-1"
                                    role="dialog" aria-labelledby="editModalLabel<%= Address._id %>"
                                    aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <!-- Add your modal content here -->
                                            <div class="modal-header">
                                                <h5 class="modal-title"
                                                    id="editModalLabel<%= Address._id %>">Edit Address
                                                </h5>
                                                <button type="button" class="close" data-dismiss="modal"
                                                    aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>

                                            <div class="modal-body">
                                                <!-- Add your form fields with predefined values here -->
                                                <form id="editForm<%= Address._id %>">
                                                    <!-- Example input field (replace with your actual form fields) -->
                                                    <div class="modal-body mx-3">
                                                        <div class="modal-body mx-3">
                                                            <div class="form-group">
                                                                <label
                                                                    for="editName<%= Address._id %>">Name</label>
                                                                <input type="text" class="form-control"
                                                                    id="editName<%= Address._id %>"
                                                                    value="<%= Address.name %>"
                                                                    name="name">

                                                                <p id="addname" style="color: red"></p>
                                                            </div>

                                                            <div class="form-group">
                                                                <label
                                                                    for="editMobile<%= Address._id %>">Mobile
                                                                    Number</label>
                                                                <input type="tel" class="form-control"
                                                                    id="editMobile<%= Address._id %>"
                                                                    value="<%= Address.mobile %>"
                                                                    name="mobile" required>
                                                                <p id="addmobile" style="color: red"></p>
                                                            </div>

                                                            <div class="form-group">
                                                                <label
                                                                    for="editPincode<%= Address._id %>">Pincode</label>
                                                                <input type="text"
                                                                    class="form-control"
                                                                    id="editPincode<%= Address._id %>"
                                                                    value="<%= Address.pincode %>"
                                                                    name="pincode" required>
                                                                <p id="addpin" style="color: red"></p>
                                                            </div>

                                                            <div class="form-group">
                                                                <label
                                                                    for="editAddress<%= Address._id %>">Address</label>
                                                                <input type="text" class="form-control"
                                                                    id="editAddress<%= Address._id %>"
                                                                    value="<%= Address.address %>"
                                                                    name="address" required>
                                                                <p id="addaddress" style="color: red"></p>
                                                            </div>

                                                            <div class="form-group">
                                                                <label
                                                                    for="editCity<%= Address._id %>">City</label>
                                                                <input type="text" class="form-control"
                                                                    id="editCity<%= Address._id %>"
                                                                    value="<%= Address.city %>"
                                                                    name="city" required>
                                                                <p id="addcity" style="color: red"></p>
                                                            </div>

                                                            <div class="form-group">
                                                                <label
                                                                    for="editState<%= Address._id %>">State</label>
                                                                <select class="form-control" id="editState<%= Address._id %>"  name="state">                                                                                                            
                                                                    <option value="<%= Address.state %>" selected> <%= Address.state %> </option>                                                                              
                                                                    <option value="Tamil Nadu">Tamil Nadu</option>
                                                                    <option value="Karnataka">Karnataka</option>
                                                                    <option value="Goa">Goa</option>
                                                                    <option value="Mumbai">Mumbai</option>
                                                                </select>
                                                            </div>
                                                            <p id="addstate" style="color: red"></p>
                                                        </div>

                                                        <!-- Add more fields as needed -->

                                                        <!-- Example Save button -->
                                                        <button type="button" class="btn btn-primary"
                                                            onclick="saveEdit('<%= Address._id %>')">
                                                            Save Changes</button>

                                                         

                                                            
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <%})%>


                            <div id="selectedAddress"></div>
                                
                            <style>
                                .address-container {
                                    border: 2px solid #ccc;
                                    padding: 10px;
                                    margin-bottom: 10px;
                                    padding-left: 20px;
                                }
                            </style>

                           <div>
                              <!-- Add Address button with the /address route -->
                            <a href="/address" class="btn btn-primary btn-rounded mb-4 mt-3">Add Address</a>
                          </div>
                                
                                   
                          
                        </div>
                        <aside class="col-lg-3">
                            <div class="summary">
                                <h3 class="summary-title">Your Order</h3>
                        
                                <table class="table table-summary" id="load">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                        
                                    <tbody>
                                        <% if (cartData && cartData.products && cartData.products.length > 0) { %>
                                            <% cartData.products.forEach((product) => { %>
                                                <tr>
                                                    <td><a href="#">Product Name </a></td>
                                                    <td><%= product.productId.name %></td>
                                                </tr>
                                            <% }) %>
                        
                                            <tr class="summary-subtotal">
                                                <td>Subtotal:</td>
                                                <td>₹<%= cartData.subtotal %></td>
                                            </tr>
                        
                                            <tr class="summary-discount" style="display:none">
                                                <td>Discount:</td>
                                                <td>₹<span id="discountAmount">0</span></td>
                                            </tr>
                        
                                            <tr class="summary-total">
                                                <td>Total:</td>
                                                <td>₹<span id="totalAmount"><%= cartData.subtotal %></span></td>
                                                <input type="hidden" id="grandTotal" value="<%= cartData.subtotal %>">
                                            </tr>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="2">Your cart is empty</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                        
                                <!-- <% if(locals.disCoupon){%>
                                    <div class="coupon-section">
                                        
                                         <input type="hidden" id="couponPercentage" value="<%= disCoupon.percentage%>">

                                        <button class="btn btn-outline-primary-2 btn-sorder btn-block apply-coupon-btn" >Coupon Applied</button>
                                    </div>
                                <%}else{%>
                                    <div class="coupon-section">
                                       
                                        <button class="btn btn-outline-primary-2 btn-sorder btn-block apply-coupon-btn" onclick="applyCoupon()">ApplyCoupon</button>
                                    </div>
                                <%}%> -->

                                <% if (locals.disCoupon) { %>
                                    <div class="coupon-section">
                                        <input type="hidden" id="couponPercentage" value="<%= disCoupon.percentage %>">
                                        <button 
                                            class="btn btn-outline-primary-2 btn-sorder btn-block apply-coupon-btn" 
                                            onclick="resetCoupon()">
                                            Coupon Applied
                                        </button>
                                    </div>
                                <% } else { %>
                                    <div class="coupon-section">
                                        <button 
                                            class="btn btn-outline-primary-2 btn-sorder btn-block apply-coupon-btn" 
                                            onclick="applyCoupon()">
                                            Apply Coupon
                                        </button>
                                    </div>
                                <% } %>
                                
                                
                        
                                <div class="accordion-summary" id="accordion-payment">
                                    <select name="paymentMethod" id="payment">
                                        <% if (cartData.subtotal <= 1000) { %>
                                        <option value="Cash on delivery">Cash on delivery</option>
                                   <% }%>
                                        <option value="Razorpay">Razorpay</option>
                                        <option value="wallet" id="walletbalance" data-balance="<%= walletBalance ? walletBalance : 0 %>">Wallet
                                            &nbsp;&nbsp; (<%= walletBalance ?walletBalance : 'wallet is empty' %>)
                                        </option>
                                    </select>
                                </div>
                        
                                <button  id="placeOrder" class="btn btn-outline-primary-2 btn-sorder btn-block place-order-btn" >
                                    Place Order
                                </button>
                            </div>
                        </aside>
                    </div>
                </form>
            </div>
        </div>
    </div>
</main>

<link rel="preload" href="your-resource-url.js" as="script">

<!--------------------------------coupon modal---------------------------------- -->

<!-- <div id="discountModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2>Available Discounts</h2>
        <div class="discount-item">
            <% coupon.forEach((element) => { %>
            <span class="discount-code"><%= element.couponCode %></span>
            <span class="discount-minPrice">Min Price: ₹<%= element.minPrice %></span>
            <span class="discount-maxRedeemAmount">Max Redeem: ₹<%= element.maxRedeemAmount %></span>
            <span class="discount-percentage"><%= element.percentage %>% discount</span>
            <button 
                class="apply-btn" 
                data-coupon="<%= element.couponCode %>" 
                data-percentage="<%= element.percentage %>"
                data-maxredeem="<%= element.maxRedeemAmount %>">
                Apply Coupon
            </button>
            <% }) %>
        </div>
    </div>
</div> -->

<div id="discountModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2>Available Discounts</h2>
        <% coupon.forEach((element) => { %>
            <div class="discount-item">
                <label for="coupon-<%= element.couponCode %>" class="form-label">
                    <strong>Coupon Code:</strong> <%= element.couponCode %>
                </label>
                <p><strong>Min Price:</strong> ₹<%= element.minPrice %></p>
                <p><strong>Max Redeem Amount:</strong> ₹<%= element.maxRedeemAmount %></p>
                <p><strong>Discount:</strong> <%= element.percentage %>%</p>
                <button 
                class="apply-btn" 
                data-coupon="<%= element.couponCode %>" 
                data-percentage="<%= element.percentage %>"
                data-maxredeem="<%= element.maxRedeemAmount %>">
                Apply Coupon
            </button>
            </div>
        <% }) %>
    </div>
</div>


<!-- CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

<!-- JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

  <script>
       
       document.getElementById('placeOrder').addEventListener('click', function(e) {
    e.preventDefault()

 const paymentMethod = document.getElementById("payment").value;
     const selectedRadio = document.querySelector('input[name="selectedAddress"]:checked');
     const total = document.getElementById("grandTotal").value;
     const walletElement = document.getElementById("walletbalance");
     const walletBalance = walletElement.getAttribute("data-balance");

     
const totalAmt = Number(total);
console.log( "totalAMT :",typeof(totalAmt));
console.log('paymentMethod',paymentMethod);
   
        if (!selectedRadio) {
            Swal.fire({
                icon: 'warning',
                title: 'Please select an address',
                text: 'You must select an address before proceeding.',
            });
            return;
       }

       const selectedValue = JSON.parse(selectedRadio.value);
                    const couponCode = "";          

        if (paymentMethod==='Razorpay') {          
         initiateRazorPayPayment(totalAmt,paymentMethod, selectedValue);
        return
      }

//wallet
if(paymentMethod==='wallet'){       
        saveWalletOrder(totalAmt,paymentMethod, selectedValue,walletBalance);
        return       
    }
fetch('/placeorder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                paymentMethod: paymentMethod,
                selectedValue: selectedValue,
               
            }),
        })
        .then(response => response.json())
        .then(data => {
            console.log('Backend response:', data);

            if (data.success) {
                               
                    window.location.href = '/ordersuccess';
                
            } else if (data.message) {
                
                Swal.fire({
                    title: 'Order Processing Failed',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
  
}

        );


</script>   

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="preload" href="script.js" as="script">
<link rel="preload" href="style.css" as="style">


<script>
    const initiateRazorPayPayment = async (totalAmt, paymentMethod, selectedValue) => {
        // console.log("kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk",totalAmt,paymentMethod,selectedRadio);
        
    try {
        // Fetch Razorpay key
        const response = await fetch("/razor-key", {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
            }
        });
        const data = await response.json();

        
        const orderResponse = await fetch("/razor-order", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ amount: parseInt(totalAmt) }),
        });
        const orderData = await orderResponse.json();
        // console.log('orderccccccccccccccccccc data',orderData)

        // Razorpay configuration
        // let newAmount = parseFloat(totalAmt)
        const options = {
            key: data.key,
            amount: parseInt(orderData.order.amount)*100, // Convert to paise
            currency: "INR",
            name: "HeavenlyHues",
            description: "Test Transaction",
            image: `img/fav.png`,
            order_id: orderData.orderId,
            handler: function (response) {
                
                saveOrderRazor(response, paymentMethod, selectedValue);

            },
            prefill: {
                name: "John",
                email: "john@example.com",
                contact: "9000090000",
            },
            notes: {
                address: "Razorpay Corporate Office",
            },
            theme: {
                color: "#1818c4",
            },
        };

        const razor = new window.Razorpay(options);
        razor.open();

        razor.on("payment.failed", async function (response) {
    console.log("res",response)
    try {
      const newOrder = await fetch("/faildOrder", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          addressId: selectedValue,
          paymentMethod: paymentMethod,
          amount: parseInt(totalAmt),
          // couponCode: couponCode,
        }),
      });
      const data = await newOrder.json();

if(data){
    
  Swal.fire({
          title: "Payment failed Order created with payment status Failed",
          icon: "success",
          showCancelButton: false,
          confirmButtonColor: "#3085d6",
          confirmButtonText: "OK",
        })
        .then((result) => {  
    if (result.isConfirmed) {
      console.log('User clicked OK');
      window.location.href = '/cart';
    }
  })
}else{

  console.log("something went wrong try again");
  
}
    } catch (error) {
      console.log("faild payment error",error);
   
    }
  });

    } catch (error) {
        console.error("Error initiating Razorpay payment:", error);
    }
};
</script>

<!-- add coupon  -->
 <script>

document.addEventListener('DOMContentLoaded', function() {
    // Function to open the modal
    function applyCoupon() {
        console.log('.....ith entha avastha...........');
        
        document.getElementById("discountModal").style.display = "block";
    }

    // Function to close the modal
    function closeModal() {
        document.getElementById("discountModal").style.display = "none";
    }

    // Attach event listeners to all coupon buttons
    const couponButtons = document.querySelectorAll('.apply-btn');
    couponButtons.forEach(button => {
        button.addEventListener('click', function() {
            const couponCode = this.getAttribute('data-coupon');
            const percentage = parseFloat(this.getAttribute('data-percentage'));  // Convert percentage to float
            const maxRedeemableAmount = parseFloat(this.getAttribute('data-maxredeem'));//today
            
            if (isNaN(percentage)) {
                console.error('Invalid percentage value:', percentage);
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Coupon',
                    text: 'The discount percentage is invalid.'
                });
                return;
            }

            // Parse the total value from the grand total element using value
            const totalElement = document.getElementById('grandTotal');
            const totalValue = parseFloat(totalElement.value.replace('₹', '').replace(',', '').trim());

            if (isNaN(totalValue)) {
                console.error('Invalid total value:', totalValue);
                Swal.fire({
                    icon: 'error',
                    title: 'Total Calculation Error',
                    text: 'There was an issue calculating the total.'
                });
                return;
            }

            // Calculate the discount value
            // const discountValue = (percentage / 100) * totalValue;
            // console.log("discountval",discountValue)
            // const discountedTotal = totalValue - discountValue;

    const discountValue = (percentage / 100) * totalValue;
    const finalDiscount = Math.min(discountValue, maxRedeemableAmount);
    const discountedTotal = totalValue - finalDiscount;

            if (isNaN(percentage) || isNaN(maxRedeemableAmount) || isNaN(totalValue)) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Coupon',
            text: 'Please check your coupon details or total amount.',
        });
        return;
    }

            // console.log(`Applying coupon ${couponCode} with discount ₹${discountValue.toFixed(2)}`);
            console.log(`Applying coupon ${couponCode}: Discount ₹${finalDiscount.toFixed(2)}`);  

            // Update the total and discount on the page
            document.getElementById('discountAmount').innerText = discountValue.toFixed(2);
            document.getElementById('totalAmount').innerText = discountedTotal.toFixed(2);
            document.querySelector('.summary-discount').style.display = 'table-row'; 

            // Send coupon data to the backend
            fetch('/saveCoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ totalPrice: discountedTotal, couponCode ,discountValue:finalDiscount })  // Pass the discounted total
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Coupon Applied!',
                        text: `You saved ₹${discountValue.toFixed(2)}!`
                    }).then(() => {
    closeModal();
    totalElement.value = discountedTotal.toFixed(2); // Update the hidden input value
    document.querySelector('.coupon-section').innerHTML = `
        <button class="btn btn-outline-primary-2 btn-sorder btn-block apply-coupon-btn" onclick="resetCoupon()">Coupon Applied</button>
    `;
});

                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Coupon Failed',
                        text: data.message || 'Invalid coupon.'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'An error occurred. Please try again later.'
                });
            });
        });
    });

    // Attach event listener to the apply coupon button
    const applyCouponBtn = document.querySelector('.apply-coupon-btn');
    if (applyCouponBtn) {
        applyCouponBtn.addEventListener('click', applyCoupon);
    }

    // Close modal functionality
    const closeBtn = document.querySelector('.close');
    if (closeBtn) {
        closeBtn.addEventListener('click', closeModal);
    }

    // Close modal if user clicks outside of it
    window.onclick = function(event) {
        const modal = document.getElementById("discountModal");
        if (event.target === modal) {
            modal.style.display = "none";
        }
    };
});



    </script> 

<script>
    function resetCoupon() {
 console.log('checkinh function');
 

        fetch('/remove-coupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to reset coupon');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    console.log('ibde ethandoooooooooooooo');
                    
                    location.reload(); // Refresh the page to reset the coupon state
                } else {
                    console.error('Error from server:', data.message);
                }
            })
            .catch(error => {
                console.error('Error resetting coupon:', error);
            });
    }
</script>

<!-- remove coupon include but its not work  -->
    <!-- <script>
        function openCouponModal() {
    document.getElementById("discountModal").style.display = "block";
}

function closeModal() {
    document.getElementById("discountModal").style.display = "none";
}

function applyCoupon(couponCode, percentage) {
    fetch('/saveCoupon', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ couponCode, percentage }),
    })
        .then((response) => response.json())
        .then((data) => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Coupon Applied',
                    text: `Coupon ${couponCode} applied successfully!`,
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Coupon Failed',
                    text: data.message,
                });
            }
        });
}

function removeCoupon() {
    fetch('/remove-coupon', { method: 'POST' })
        .then((response) => response.json())
        .then((data) => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Coupon Removed',
                    text: 'The applied coupon has been removed.',
                }).then(() => {
                    location.reload();
                });
            }
        });
}

    </script> -->

<script>
    const saveOrderRazor = async (razorResponse,selectedPayment,selectedValue) => {
        
      try {
        //saving the order
        const response = await fetch("/placeorder", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            selectedValue:selectedValue ,
            paymentMethod: selectedPayment,
          }),
        });
  
        const data = await response.json();
  
  
        if (data) {
          Swal.fire({
            title: "Your order has been created",
            icon: "success",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          }).then(async (result) => {
            window.location.href = '/ordersuccess';
        });
        }else{
          showErrorToast("somthing went wrong");
        }
  
      } catch (error) {
        console.log(error);
        showErrorToast(error.response?.data?.error || "something went wrong");
      }
    };
  </script>


<script>
    const saveWalletOrder = async(totalAmt,paymentMethod, selectedValue,walletBalance) =>{
        try{
        if(Number(walletBalance) < Number(totalAmt)){
            showErrorToast("Insufficient balance in wallet");
            return;
        }
        const response = await fetch("/placeorder",{
            method:"POST",
            headers:{
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                 selectedValue,
                paymentMethod,
            }),
        });
        const data = await response.json();
        if (data) {
          Swal.fire({
            title: "Your order has been created",
            icon: "success",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          }).then(async (result) => {
            window.location.href = '/ordersuccess';
        });
        }else{
          showErrorToast("somthing went wrong");
        }
    }catch(error){
        console.log(error);
        showErrorToast(error.response?.data?.error || "something went wrong"); 
    }     
    };
</script>
 

 <script>
    function saveEdit(addressId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'You are about to update the address.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, update it!',
        }).then((result) => {
            if (result.isConfirmed) {

                const name = document.getElementById(`editName${addressId}`).value.trim();
                const mobile = document.getElementById(`editMobile${addressId}`).value.trim();
                const pincode = document.getElementById(`editPincode${addressId}`).value.trim();
                const address = document.getElementById(`editAddress${addressId}`).value.trim();
                const city = document.getElementById(`editCity${addressId}`).value.trim();
                const state = document.getElementById(`editState${addressId}`).value.trim();


                if (!name) {
                    const message = document.getElementById("addname").innerHTML = "Please enter name"
                    return
                }

                if (!mobile) {
                    const message = document.getElementById("addmobile").innerHTML = "Please enter mobile"
                    return
                }

                if (!pincode) {
                    const message = document.getElementById("addpin").innerHTML = "Please enter pincode"
                    return
                }

                if (!address) {
                    const message = document.getElementById("addaddress").innerHTML = "Please enter address"
                    return
                }

                if (!city) {
                    const message = document.getElementById("addcity").innerHTML = "Please enter city"
                    return
                }

                if (!state) {
                    const message = document.getElementById("addstate").innerHTML = "Please enter state"
                    return
                }





                fetch(`/updateaddress/${addressId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name,
                        mobile,
                        pincode,
                        address,
                        city,
                        state,
                    }),
                })
                    .then(response => {
                        console.log('result:',response)
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {


                        console.log('Response from the backend:', data);
                        // $('#tabaddress').load('/profile #tabaddress')

                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: data.message ||'Address updated successfully.',
                        });

                        window.location.reload();



                        // $(`#editModal${addressId}`).modal('hide');



                    })
                    .catch(error => {


                        console.error('There was a problem:', error.message);


                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to update address. Please try again.',
                        });
                    });
            }
        });
    }
</script> 

<script>
    function editprofile(){
        const name = document.getElementById('editName').value.trim();
        const mobile = document.getElementById('editMobile').value.trim();

        if (name === '' || mobile === '') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please fill in all required fields.',
                    });
                    return; 
                }

                if(!/^\d{10}$/.test(mobile)){
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Input',
                        text: 'Please enter a valid 10-digit mobile number.'
                    });
                    return;
                  }

                  const formData = {
                    name:name,
                    mobile:mobile
                  };

             // Send the data to the server using fetch API
        fetch('/edit-profile',{
            method:'POST',
            headers:{
                'Content-Type':'application/json',
            },
            body: JSON.stringify(formData)
        })
        .then(response=> response.json())
        .then(data => {
            if(data.success){
                Swal.fire({
                    icon: 'success',
                title: 'Success!',
                text: 'Profile updated successfully!'  
                }).then((result)=>{
                    if(result.isConfirmed){
                     
                    window.location.href = '/profile';
                    }
                });
            } else {
                Swal.fire({
                    icon: 'error',
                title: 'Update Failed',
                text: 'Failed to update profile. Please try again.' 
                });
            }
        })
        .catch(error=>{
            console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'An error occurred. Please try again later.'
        });
     });
    }

</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>




<%- include('../layout/User/footer') %>